# Generated by Django 3.2.18 on 2023-04-28 09:12

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Diary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Diary name')),
                ('description', models.TextField(verbose_name='Description')),
            ],
            options={
                'verbose_name_plural': 'Diary entries',
            },
        ),
        migrations.CreateModel(
            name='Emotions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Emotion name')),
                ('description', models.TextField(verbose_name='Descrition')),
            ],
        ),
        migrations.CreateModel(
            name='Moods',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Mood name')),
                ('description', models.TextField(verbose_name='Descrition')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.user')),
            ],
            options={
                'abstract': False,
            },
            bases=('core.user',),
        ),
        migrations.CreateModel(
            name='Therapist',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.user')),
            ],
            options={
                'abstract': False,
            },
            bases=('core.user',),
        ),
        migrations.CreateModel(
            name='DiaryEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(verbose_name='Description')),
                ('diary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='core.diary', verbose_name='diary')),
                ('emotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.emotions', verbose_name='emotion')),
                ('mood', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.moods', verbose_name='mood')),
            ],
            options={
                'verbose_name_plural': 'Diary entries',
            },
        ),
        migrations.CreateModel(
            name='Therapy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Description')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.patient', verbose_name='owner')),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.therapist', verbose_name='therapist')),
            ],
            options={
                'verbose_name_plural': 'Diary entries',
            },
        ),
        migrations.AddField(
            model_name='therapist',
            name='patients',
            field=models.ManyToManyField(through='core.Therapy', to='core.Patient'),
        ),
        migrations.AddField(
            model_name='diary',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.patient', verbose_name='owner'),
        ),
        migrations.AddField(
            model_name='diary',
            name='therapist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.therapist', verbose_name='therapist'),
        ),
    ]
